{"version":3,"sources":["Buttons.js","App.js","serviceWorker.js","index.js","reducer.js"],"names":["buttonObjects","value","gridArea","keyCode","Button","pressedKey","clicked","classes","style","className","join","onClick","Buttons","setInputVal","React","useState","setPressedKey","useEffect","handleKeyDown","e","preventDefault","key","target","handleKeyUp","document","addEventListener","removeEventListener","buttons","map","btn","type","Display","formula","currentVal","Calculator","useReducer","reducer","initialState","state","dispatch","payload","Credit","href","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","PRECISION","isOperator","val","test","trim","isNumber","isEval","isClear","isDecimal","endsWithOperator","slice","endsWithMinus","inputVal","evaluated","prevVal","initialized","numberEntered","newCurrentVal","newFormula","concat","decimalEntered","includes","operatorEntered","expression","answer","Math","round","eval","toString","inputReceived","action","v"],"mappings":"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","file":"static/js/main.5f8005a1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst buttonObjects = [\n  { value: \"Clear\", gridArea: \"clear\", keyCode: 12 },\n  { value: \"=\", gridArea: \"equal\", keyCode: 187 },\n  { value: \"/\", gridArea: \"divide\", keyCode: 111 },\n  { value: \"*\", gridArea: \"multiply\", keyCode: 106 },\n  { value: \"7\", gridArea: \"seven\", keyCode: 55 },\n  { value: \"8\", gridArea: \"eight\", keyCode: 56 },\n  { value: \"9\", gridArea: \"nine\", keyCode: 57 },\n  { value: \"-\", gridArea: \"minus\", keyCode: 109 },\n  { value: \"4\", gridArea: \"four\", keyCode: 52 },\n  { value: \"5\", gridArea: \"five\", keyCode: 53 },\n  { value: \"6\", gridArea: \"six\", keyCode: 54 },\n  { value: \"+\", gridArea: \"plus\", keyCode: 107 },\n  { value: \"1\", gridArea: \"one\", keyCode: 49 },\n  { value: \"2\", gridArea: \"two\", keyCode: 50 },\n  { value: \"3\", gridArea: \"three\", keyCode: 51 },\n  { value: \"Enter\", gridArea: \"enter\", keyCode: 13 },\n  { value: \"0\", gridArea: \"zero\", keyCode: 48 },\n  { value: \".\", gridArea: \"point\", keyCode: 110 }\n];\n\nfunction Button({ value, gridArea, pressedKey, clicked }) {\n  let classes = [\"Button\"];\n  if (pressedKey === value) {\n    classes = [...classes, \"active\"];\n  }\n  const style = { gridArea };\n  return (\n    <button\n      style={style}\n      className={classes.join(\" \")}\n      onClick={clicked}\n      value={value}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Buttons({ setInputVal }) {\n  const [pressedKey, setPressedKey] = React.useState(null);\n\n  React.useEffect(() => {\n    function handleKeyDown(e) {\n      // prevent another button that was focused by clicking\n      // from being \"clicked\" by pressing Enter\n      e.preventDefault();\n      if (e.key === pressedKey) return;\n      setInputVal({\n        target: { value: e.key }\n      });\n      setPressedKey(e.key);\n    }\n\n    function handleKeyUp(e) {\n      if (e.key === pressedKey) {\n        setPressedKey(null);\n      }\n    }\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, [pressedKey, setInputVal]);\n\n  const buttons = buttonObjects.map(btn => {\n    return (\n      <Button\n        type=\"button\"\n        key={btn.gridArea}\n        value={btn.value}\n        gridArea={btn.gridArea}\n        pressedKey={pressedKey}\n        clicked={setInputVal}\n      />\n    );\n  });\n\n  return <div className=\"Buttons\">{buttons}</div>;\n}\n\nexport default Buttons;\n","import React from 'react';\nimport Buttons from './Buttons';\nimport reducer, { initialState } from './reducer';\n\nfunction Display({ formula, currentVal }) {\n  return (\n    <div className=\"display\">\n      <span className=\"formula\">{formula}</span>\n      <span className=\"output\">{currentVal}</span>\n    </div>\n  );\n}\n\nfunction Calculator() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const setInputVal = (e) => {\n    dispatch({\n      type: 'inputReceived',\n      payload: e.target.value,\n    });\n  };\n\n  return (\n    <div className=\"calculator\">\n      <Display formula={state.formula} currentVal={state.currentVal} />\n      <Buttons currentVal={state.currentVal} setInputVal={setInputVal} />\n    </div>\n  );\n}\n\nconst Credit = () => (\n  <div className=\"credit\">\n    by Sid H. Lee\n    <a\n      href=\"https://github.com/sidhlee\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      <i className=\"fab fa-github\"></i>\n    </a>\n  </div>\n);\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <Calculator />\n        <Credit />\n        <p className=\"instruction\">Use keypad to input numbers!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// TODO: add input for precision setting\nconst PRECISION = 2;\n\nconst isOperator = (val) => /^[/*\\-+]$/.test(val.trim());\nconst isNumber = (val) => /^[0-9]$/.test(val);\nconst isEval = (val) => /^Enter$|^=$/i.test(val);\nconst isClear = (val) => /^clear$/i.test(val);\nconst isDecimal = (val) => /^\\.$/.test(val);\nconst endsWithOperator = (val) => isOperator(val.trim().slice(-1));\nconst endsWithMinus = (val) => val.trim().slice(-1) === '-';\n\nexport const initialState = {\n  inputVal: null,\n  currentVal: '0',\n  evaluated: false,\n  prevVal: '0',\n  formula: '',\n  error: false,\n};\n\nfunction initialized() {\n  return initialState;\n}\n\nfunction numberEntered(state, inputVal) {\n  const { currentVal, formula, evaluated } = state;\n  let newCurrentVal, newFormula;\n\n  if (evaluated && !endsWithOperator(formula))\n    return {\n      ...initialState,\n      currentVal: inputVal,\n      formula: inputVal,\n    };\n  if (currentVal === '0') {\n    if (inputVal === '0') newCurrentVal = '0';\n    else newCurrentVal = inputVal;\n  } else if (isOperator(currentVal)) {\n    newCurrentVal = inputVal;\n  } else {\n    newCurrentVal = currentVal.concat(inputVal);\n  }\n\n  newFormula = formula.concat(inputVal);\n  return {\n    ...state,\n    formula: newFormula,\n    inputVal: inputVal,\n    evaluated: false,\n    currentVal: newCurrentVal,\n  };\n}\n\nfunction decimalEntered(state, inputVal) {\n  const { currentVal, formula } = state;\n  let newCurrentVal, newFormula;\n  if (currentVal === '.') newCurrentVal = '.';\n  newCurrentVal = currentVal.concat('.');\n  if (currentVal.includes('.')) newCurrentVal = currentVal;\n  newFormula = formula.concat(inputVal);\n  return {\n    ...state,\n    formula: newFormula,\n    inputVal: inputVal,\n    currentVal: newCurrentVal,\n  };\n}\n\nfunction operatorEntered(state, inputVal) {\n  const { currentVal, formula, evaluated, prevVal } = state;\n  let newCurrentVal = currentVal,\n    newFormula = formula;\n  if (evaluated)\n    return {\n      ...state,\n      currentVal: inputVal,\n      formula: prevVal + ' ' + inputVal + ' ',\n    };\n  if (inputVal === '-' && !endsWithOperator(currentVal)) {\n    if (currentVal === '-' || currentVal[0] === '-') {\n      newCurrentVal = currentVal;\n      newFormula = formula;\n    }\n    if (currentVal === '0') {\n      newCurrentVal = '-';\n      newFormula = '-';\n    } else {\n      newCurrentVal = '-';\n      newFormula = formula.concat(' ' + inputVal + ' ');\n    }\n  } else if (!isOperator(currentVal)) {\n    if (currentVal === '0') {\n      newCurrentVal = currentVal;\n      newFormula = formula;\n    } else {\n      newCurrentVal = inputVal;\n      newFormula = formula.concat(' ' + inputVal + ' ');\n    }\n  } else if (endsWithOperator(formula)) {\n    if (inputVal === '-') {\n      if (endsWithMinus(formula)) {\n        newCurrentVal = inputVal;\n        newFormula = formula;\n      } else {\n        newCurrentVal = inputVal;\n        newFormula = formula + ' ' + inputVal + ' ';\n      }\n    } else {\n      const formulaEndsWithOperatorAndMinus =\n        endsWithMinus(formula) && endsWithOperator(formula.trim().slice(0, -1));\n      if (formulaEndsWithOperatorAndMinus) {\n        newCurrentVal = inputVal;\n        newFormula = formula.trim().slice(0, -4) + ' ' + inputVal + ' ';\n      } else {\n        newCurrentVal = inputVal;\n        newFormula = formula.slice(0, -3) + ' ' + inputVal + ' ';\n      }\n    }\n  }\n\n  return {\n    ...state,\n    formula: newFormula,\n    inputVal: inputVal,\n    currentVal: newCurrentVal,\n  };\n}\n\nfunction evaluated(state, inputVal) {\n  const { currentVal, formula } = state;\n  let expression = formula;\n  if (isOperator(currentVal.trim().slice(-1)))\n    expression = formula.slice(0, -3);\n  // eslint-disable-next-line no-eval\n  const answer =\n    // eslint-disable-next-line no-eval\n    Math.round(eval(expression) * 10 ** PRECISION) / 10 ** PRECISION;\n  const newFormula = expression + ' = ' + answer;\n  return {\n    ...state,\n    currentVal: answer.toString(),\n    formula: newFormula,\n    prevVal: answer,\n    evaluated: true,\n  };\n}\n\nfunction inputReceived(state, action) {\n  const v = action.payload;\n  if (state.error) {\n    return isClear(v) ? initialized(state, v) : state;\n  }\n  if (isNumber(v)) return numberEntered(state, v);\n  if (isDecimal(v)) return decimalEntered(state, v);\n  if (isClear(v)) return initialized(state, v);\n  if (isOperator(v)) return operatorEntered(state, v);\n  if (isEval(v)) return evaluated(state, v);\n  return state;\n}\n\n// reducer for Calculator state\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'inputReceived':\n      return inputReceived(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"sourceRoot":""}